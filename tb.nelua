## cdefine 'TB_IMPL'
## cinclude "termbox2.h"

global tb_event: type <cimport, nodecl, ctypedef> = @record{}
global tb_cell: type <cimport, nodecl, ctypedef> = @record{}

global TB_PATH_MAX: int32 <cimport, nodecl> 
global TB_VERSION_STR: cstring <cimport, nodecl> 
global TB_OPT_ATTR_W: int32 <cimport, nodecl> 
global TB_OPT_ATTR_W: int32 <cimport, nodecl> 
global TB_OPT_ATTR_W: int32 <cimport, nodecl> 
global TB_KEY_CTRL_TILDE: int32 <cimport, nodecl> 
global TB_KEY_CTRL_2: int32 <cimport, nodecl> 
global TB_KEY_CTRL_A: int32 <cimport, nodecl> 
global TB_KEY_CTRL_B: int32 <cimport, nodecl> 
global TB_KEY_CTRL_C: int32 <cimport, nodecl> 
global TB_KEY_CTRL_D: int32 <cimport, nodecl> 
global TB_KEY_CTRL_E: int32 <cimport, nodecl> 
global TB_KEY_CTRL_F: int32 <cimport, nodecl> 
global TB_KEY_CTRL_G: int32 <cimport, nodecl> 
global TB_KEY_BACKSPACE: int32 <cimport, nodecl> 
global TB_KEY_CTRL_H: int32 <cimport, nodecl> 
global TB_KEY_TAB: int32 <cimport, nodecl> 
global TB_KEY_CTRL_I: int32 <cimport, nodecl> 
global TB_KEY_CTRL_J: int32 <cimport, nodecl> 
global TB_KEY_CTRL_K: int32 <cimport, nodecl> 
global TB_KEY_CTRL_L: int32 <cimport, nodecl> 
global TB_KEY_ENTER: int32 <cimport, nodecl> 
global TB_KEY_CTRL_M: int32 <cimport, nodecl> 
global TB_KEY_CTRL_N: int32 <cimport, nodecl> 
global TB_KEY_CTRL_O: int32 <cimport, nodecl> 
global TB_KEY_CTRL_P: int32 <cimport, nodecl> 
global TB_KEY_CTRL_Q: int32 <cimport, nodecl> 
global TB_KEY_CTRL_R: int32 <cimport, nodecl> 
global TB_KEY_CTRL_S: int32 <cimport, nodecl> 
global TB_KEY_CTRL_T: int32 <cimport, nodecl> 
global TB_KEY_CTRL_U: int32 <cimport, nodecl> 
global TB_KEY_CTRL_V: int32 <cimport, nodecl> 
global TB_KEY_CTRL_W: int32 <cimport, nodecl> 
global TB_KEY_CTRL_X: int32 <cimport, nodecl> 
global TB_KEY_CTRL_Y: int32 <cimport, nodecl> 
global TB_KEY_CTRL_Z: int32 <cimport, nodecl> 
global TB_KEY_ESC: int32 <cimport, nodecl> 
global TB_KEY_CTRL_LSQ_BRACKET: int32 <cimport, nodecl> 
global TB_KEY_CTRL_3: int32 <cimport, nodecl> 
global TB_KEY_CTRL_4: int32 <cimport, nodecl> 
global TB_KEY_CTRL_BACKSLASH: int32 <cimport, nodecl> 
global TB_KEY_CTRL_5: int32 <cimport, nodecl> 
global TB_KEY_CTRL_RSQ_BRACKET: int32 <cimport, nodecl> 
global TB_KEY_CTRL_6: int32 <cimport, nodecl> 
global TB_KEY_CTRL_7: int32 <cimport, nodecl> 
global TB_KEY_CTRL_SLASH: int32 <cimport, nodecl> 
global TB_KEY_CTRL_UNDERSCORE: int32 <cimport, nodecl> 
global TB_KEY_SPACE: int32 <cimport, nodecl> 
global TB_KEY_BACKSPACE2: int32 <cimport, nodecl> 
global TB_KEY_CTRL_8: int32 <cimport, nodecl> 
global TB_KEY_F1: int32 <cimport, nodecl> 
global TB_KEY_F2: int32 <cimport, nodecl> 
global TB_KEY_F3: int32 <cimport, nodecl> 
global TB_KEY_F4: int32 <cimport, nodecl> 
global TB_KEY_F5: int32 <cimport, nodecl> 
global TB_KEY_F6: int32 <cimport, nodecl> 
global TB_KEY_F7: int32 <cimport, nodecl> 
global TB_KEY_F8: int32 <cimport, nodecl> 
global TB_KEY_F9: int32 <cimport, nodecl> 
global TB_KEY_F10: int32 <cimport, nodecl> 
global TB_KEY_F11: int32 <cimport, nodecl> 
global TB_KEY_F12: int32 <cimport, nodecl> 
global TB_KEY_INSERT: int32 <cimport, nodecl> 
global TB_KEY_DELETE: int32 <cimport, nodecl> 
global TB_KEY_HOME: int32 <cimport, nodecl> 
global TB_KEY_END: int32 <cimport, nodecl> 
global TB_KEY_PGUP: int32 <cimport, nodecl> 
global TB_KEY_PGDN: int32 <cimport, nodecl> 
global TB_KEY_ARROW_UP: int32 <cimport, nodecl> 
global TB_KEY_ARROW_DOWN: int32 <cimport, nodecl> 
global TB_KEY_ARROW_LEFT: int32 <cimport, nodecl> 
global TB_KEY_ARROW_RIGHT: int32 <cimport, nodecl> 
global TB_KEY_BACK_TAB: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_LEFT: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_RIGHT: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_MIDDLE: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_RELEASE: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_WHEEL_UP: int32 <cimport, nodecl> 
global TB_KEY_MOUSE_WHEEL_DOWN: int32 <cimport, nodecl> 
global TB_CAP_F1: int32 <cimport, nodecl> 
global TB_CAP_F2: int32 <cimport, nodecl> 
global TB_CAP_F3: int32 <cimport, nodecl> 
global TB_CAP_F4: int32 <cimport, nodecl> 
global TB_CAP_F5: int32 <cimport, nodecl> 
global TB_CAP_F6: int32 <cimport, nodecl> 
global TB_CAP_F7: int32 <cimport, nodecl> 
global TB_CAP_F8: int32 <cimport, nodecl> 
global TB_CAP_F9: int32 <cimport, nodecl> 
global TB_CAP_F10: int32 <cimport, nodecl> 
global TB_CAP_F11: int32 <cimport, nodecl> 
global TB_CAP_F12: int32 <cimport, nodecl> 
global TB_CAP_INSERT: int32 <cimport, nodecl> 
global TB_CAP_DELETE: int32 <cimport, nodecl> 
global TB_CAP_HOME: int32 <cimport, nodecl> 
global TB_CAP_END: int32 <cimport, nodecl> 
global TB_CAP_PGUP: int32 <cimport, nodecl> 
global TB_CAP_PGDN: int32 <cimport, nodecl> 
global TB_CAP_ARROW_UP: int32 <cimport, nodecl> 
global TB_CAP_ARROW_DOWN: int32 <cimport, nodecl> 
global TB_CAP_ARROW_LEFT: int32 <cimport, nodecl> 
global TB_CAP_ARROW_RIGHT: int32 <cimport, nodecl> 
global TB_CAP_BACK_TAB: int32 <cimport, nodecl> 
global TB_CAP__COUNT_KEYS: int32 <cimport, nodecl> 
global TB_CAP_ENTER_CA: int32 <cimport, nodecl> 
global TB_CAP_EXIT_CA: int32 <cimport, nodecl> 
global TB_CAP_SHOW_CURSOR: int32 <cimport, nodecl> 
global TB_CAP_HIDE_CURSOR: int32 <cimport, nodecl> 
global TB_CAP_CLEAR_SCREEN: int32 <cimport, nodecl> 
global TB_CAP_SGR0: int32 <cimport, nodecl> 
global TB_CAP_UNDERLINE: int32 <cimport, nodecl> 
global TB_CAP_BOLD: int32 <cimport, nodecl> 
global TB_CAP_BLINK: int32 <cimport, nodecl> 
global TB_CAP_ITALIC: int32 <cimport, nodecl> 
global TB_CAP_REVERSE: int32 <cimport, nodecl> 
global TB_CAP_ENTER_KEYPAD: int32 <cimport, nodecl> 
global TB_CAP_EXIT_KEYPAD: int32 <cimport, nodecl> 
global TB_CAP_DIM: int32 <cimport, nodecl> 
global TB_CAP_INVISIBLE: int32 <cimport, nodecl> 
global TB_CAP__COUNT: int32 <cimport, nodecl> 
global TB_HARDCAP_ENTER_MOUSE: cstring <cimport, nodecl> 
global TB_HARDCAP_EXIT_MOUSE: cstring <cimport, nodecl> 
global TB_HARDCAP_STRIKEOUT: cstring <cimport, nodecl> 
global TB_HARDCAP_UNDERLINE_2: cstring <cimport, nodecl> 
global TB_HARDCAP_OVERLINE: cstring <cimport, nodecl> 
global TB_DEFAULT: int32 <cimport, nodecl> 
global TB_BLACK: int32 <cimport, nodecl> 
global TB_RED: int32 <cimport, nodecl> 
global TB_GREEN: int32 <cimport, nodecl> 
global TB_YELLOW: int32 <cimport, nodecl> 
global TB_BLUE: int32 <cimport, nodecl> 
global TB_MAGENTA: int32 <cimport, nodecl> 
global TB_CYAN: int32 <cimport, nodecl> 
global TB_WHITE: int32 <cimport, nodecl> 
global TB_BOLD: int32 <cimport, nodecl> 
global TB_UNDERLINE: int32 <cimport, nodecl> 
global TB_REVERSE: int32 <cimport, nodecl> 
global TB_ITALIC: int32 <cimport, nodecl> 
global TB_BLINK: int32 <cimport, nodecl> 
global TB_HI_BLACK: int32 <cimport, nodecl> 
global TB_BRIGHT: int32 <cimport, nodecl> 
global TB_DIM: int32 <cimport, nodecl> 
global TB_BOLD: int32 <cimport, nodecl> 
global TB_UNDERLINE: int32 <cimport, nodecl> 
global TB_REVERSE: int32 <cimport, nodecl> 
global TB_ITALIC: int32 <cimport, nodecl> 
global TB_BLINK: int32 <cimport, nodecl> 
global TB_HI_BLACK: int32 <cimport, nodecl> 
global TB_BRIGHT: int32 <cimport, nodecl> 
global TB_DIM: int32 <cimport, nodecl> 
global TB_TRUECOLOR_UNDERLINE: int32 <cimport, nodecl> 
global TB_TRUECOLOR_REVERSE: int32 <cimport, nodecl> 
global TB_TRUECOLOR_ITALIC: int32 <cimport, nodecl> 
global TB_TRUECOLOR_BLINK: int32 <cimport, nodecl> 
global TB_TRUECOLOR_BLACK: int32 <cimport, nodecl> 
global TB_STRIKEOUT: int32 <cimport, nodecl> 
global TB_UNDERLINE_2: int32 <cimport, nodecl> 
global TB_OVERLINE: int32 <cimport, nodecl> 
global TB_INVISIBLE: int32 <cimport, nodecl> 
global TB_EVENT_KEY: int32 <cimport, nodecl> 
global TB_EVENT_RESIZE: int32 <cimport, nodecl> 
global TB_EVENT_MOUSE: int32 <cimport, nodecl> 
global TB_MOD_ALT: int32 <cimport, nodecl> 
global TB_MOD_CTRL: int32 <cimport, nodecl> 
global TB_MOD_SHIFT: int32 <cimport, nodecl> 
global TB_MOD_MOTION: int32 <cimport, nodecl> 
global TB_INPUT_CURRENT: int32 <cimport, nodecl> 
global TB_INPUT_ESC: int32 <cimport, nodecl> 
global TB_INPUT_ALT: int32 <cimport, nodecl> 
global TB_INPUT_MOUSE: int32 <cimport, nodecl> 
global TB_OUTPUT_CURRENT: int32 <cimport, nodecl> 
global TB_OUTPUT_NORMAL: int32 <cimport, nodecl> 
global TB_OUTPUT_256: int32 <cimport, nodecl> 
global TB_OUTPUT_216: int32 <cimport, nodecl> 
global TB_OUTPUT_GRAYSCALE: int32 <cimport, nodecl> 
global TB_OUTPUT_TRUECOLOR: int32 <cimport, nodecl> 
global TB_OK: int32 <cimport, nodecl> 
global TB_ERR: int32 <cimport, nodecl> 
global TB_ERR_NEED_MORE: int32 <cimport, nodecl> 
global TB_ERR_INIT_ALREADY: int32 <cimport, nodecl> 
global TB_ERR_INIT_OPEN: int32 <cimport, nodecl> 
global TB_ERR_MEM: int32 <cimport, nodecl> 
global TB_ERR_NO_EVENT: int32 <cimport, nodecl> 
global TB_ERR_NO_TERM: int32 <cimport, nodecl> 
global TB_ERR_NOT_INIT: int32 <cimport, nodecl> 
global TB_ERR_OUT_OF_BOUNDS: int32 <cimport, nodecl> 
global TB_ERR_READ: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_IOCTL: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_PIPE: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_SIGACTION: int32 <cimport, nodecl> 
global TB_ERR_POLL: int32 <cimport, nodecl> 
global TB_ERR_TCGETATTR: int32 <cimport, nodecl> 
global TB_ERR_TCSETATTR: int32 <cimport, nodecl> 
global TB_ERR_UNSUPPORTED_TERM: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_WRITE: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_POLL: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_READ: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_SSCANF: int32 <cimport, nodecl> 
global TB_ERR_CAP_COLLISION: int32 <cimport, nodecl> 
global TB_ERR_SELECT: int32 <cimport, nodecl> 
global TB_ERR_RESIZE_SELECT: int32 <cimport, nodecl> 
global TB_FUNC_EXTRACT_PRE: int32 <cimport, nodecl> 
global TB_FUNC_EXTRACT_POST: int32 <cimport, nodecl> 
global TB_OPT_PRINTF_BUF: int32 <cimport, nodecl> 
global TB_OPT_READ_BUF: int32 <cimport, nodecl> 
global TB_RESIZE_FALLBACK_MS: int32 <cimport, nodecl> 

global function tb_init(): cint <cimport , nodecl> end
global function tb_init_file(path: cstring): cint <cimport , nodecl> end
global function tb_init_fd(ttyfd: cint): cint <cimport , nodecl> end
global function tb_init_rwfd(rfd: cint, wfd: cint): cint <cimport , nodecl> end
global function tb_shutdown(): cint <cimport , nodecl> end
global function tb_present(): cint <cimport , nodecl> end
global function tb_width(): cint <cimport , nodecl> end
global function tb_height(): cint <cimport , nodecl> end
global function tb_clear(): cint <cimport , nodecl> end
global function tb_set_clear_attrs(fg: uint16, bg: uint16): cint <cimport , nodecl> end
global function tb_invalidate(): cint <cimport , nodecl> end
global function tb_set_cursor(cx: cint, cy: cint): cint <cimport , nodecl> end
global function tb_hide_cursor(): cint <cimport , nodecl> end
global function tb_set_cell(x: cint, y: cint, ch: uint32, fg: uint16, bg: uint32): cint <cimport, nodecl> end
global function tb_set_cell_ex(x: cint, y: cint, ch: *uint32 , nch: csize, fg: uint16, bg: uint16): cint <cimport, nodecl> end
global function tb_extend_cell(x: cint, y: cint, ch: uint32): cint <cimport, nodecl> end
global function tb_set_input_mode(mode: cint): cint <cimport, nodecl> end
global function tb_set_output_mode(mode: cint): cint <cimport, nodecl> end
global function tb_peek_event(event: *tb_event, timeout_ms: cint): cint <cimport, nodecl> end
global function tb_poll_event(event: *tb_event): cint <cimport, nodecl> end
global function tb_get_fds(ttyfd: *cint, resizefd: *cint): cint <cimport, nodecl> end
global function tb_print(x: cint, y: cint, fg: uint16, bg: uint16, str: cstring): cint <cimport, nodecl> end
global function tb_printf(x: cint, y: cint, fg: uint16, bg: uint16, fmt: cstring, ...:varargs): cint <cimport, nodecl> end
global function tb_print_ex(x: cint, y: cint, fg: uint16, bg: uint16, out_w: *csize, str: cstring): cint <cimport, nodecl> end
global function tb_printf_ex(x: cint, y: cint, fg: uint16, bg: uint16, out_w: *csize, fmt: cstring, ...:varargs): cint <cimport, nodecl> end
global function tb_send(buf: cstring <const>, nbuf: csize): cint <cimport, nodecl> end
global function tb_sendf(buf: cstring <const>, ...:varargs): cint <cimport, nodecl> end
global function tb_set_func(fn_type: cint, cb: function(ev: *tb_event): cint ): cint <cimport, nodecl> end
global function tb_utf8_char_length(c: cchar): cint <cimport, nodecl> end
global function tb_utf8_char_to_unicode(out: *uint32, c: cstring <const>): cint <cimport, nodecl> end
global function tb_utf8_unicode_to_char(out: cstring, c: uint32): cint <cimport, nodecl> end
global function tb_last_errno(): cint <cimport, nodecl> end
global function tb_strerror(err: cint): cstring <cimport, nodecl> end
global function tb_cell_buffer(): *tb_cell <cimport, nodecl> end
global function tb_has_truecolor(): cint <cimport, nodecl> end
global function tb_has_egc(): cint <cimport, nodecl> end
global function tb_attr_width(): cint <cimport, nodecl> end
global function tb_version(): cstring <cimport, nodecl> end
